{"version":3,"file":"sentry.interceptor.js","sourceRoot":"/","sources":["sentry.interceptor.ts"],"names":[],"mappings":"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","sourcesContent":["// Nestjs imports\nimport {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor\n} from '@nestjs/common';\nimport { \n  HttpArgumentsHost,\n  WsArgumentsHost,\n  RpcArgumentsHost\n} from '@nestjs/common/interfaces';\nimport {  GqlContextType, GqlExecutionContext } from '@nestjs/graphql';\n// Rxjs imports\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n// Sentry imports\nimport { Scope } from '@sentry/hub';\nimport { Handlers } from '@sentry/node';\n\nimport { InjectSentry } from './sentry.decorator';\nimport { SentryService } from './sentry.service';\n\n\n@Injectable()\nexport class SentryInterceptor implements NestInterceptor {\n\n  constructor(@InjectSentry() private readonly client: SentryService) {}\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    // first param would be for events, second is for errors\n    return next.handle().pipe(\n      tap(null, (exception) => {\n        this.client.instance().withScope((scope) => {\n          switch (context.getType<GqlContextType>()) {\n            case 'http':\n              return this.captureHttpException(\n                scope, \n                context.switchToHttp(), \n                exception\n              );\n            case 'rpc':\n              return this.captureRpcException(\n                scope,\n                context.switchToRpc(),\n                exception,\n              );\n            case 'ws':\n              return this.captureWsException(\n                scope,\n                context.switchToWs(),\n                exception,\n              );\n            case 'graphql':\n              return this.captureGraphqlException(\n                scope, \n                GqlExecutionContext.create(context), \n                exception\n              );\n          }\n        })\n      })\n    );\n  }\n\n  private captureHttpException(scope: Scope, http: HttpArgumentsHost, exception: any): void {\n    const data = Handlers.parseRequest(<any>{},http.getRequest(), {});\n\n    scope.setExtra('req', data.request);\n    \n    if (data.extra) scope.setExtras(data.extra);\n    if (data.user) scope.setUser(data.user);\n\n    this.client.instance().captureException(exception);\n  }\n\n  private captureRpcException(\n    scope: Scope,\n    rpc: RpcArgumentsHost,\n    exception: any,\n  ): void {\n    scope.setExtra('rpc_data', rpc.getData());\n\n    this.client.instance().captureException(exception);\n  }\n\n  private captureWsException(\n    scope: Scope,\n    ws: WsArgumentsHost,\n    exception: any,\n  ): void {\n    scope.setExtra('ws_client', ws.getClient());\n    scope.setExtra('ws_data', ws.getData());\n\n    this.client.instance().captureException(exception);\n  }\n\n  private captureGraphqlException(scope: Scope, gqlContext: GqlExecutionContext, exception: any): void {\n    const info = gqlContext.getInfo()\n    const context = gqlContext.getContext() \n\n    scope.setExtra('type', info.parentType.name)\n\n    if (context.req) {\n      // req within graphql context needs modification in \n      const data = Handlers.parseRequest(<any>{}, context.req, {});\n\n      scope.setExtra('req', data.request);\n\n      if (data.extra) scope.setExtras(data.extra);\n      if (data.user) scope.setUser(data.user);\n   }\n\n    this.client.instance().captureException(exception);\n  }\n}\n"]}