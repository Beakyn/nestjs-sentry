{"version":3,"file":"sentry.interceptor.js","sourceRoot":"/","sources":["services/sentry.interceptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { CallHandler, ExecutionContext, Injectable, NestInterceptor, Inject } from '@nestjs/common';\nimport { GqlContextType, GqlExecutionContext } from '@nestjs/graphql';\nimport { Observable, TimeoutError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { SENTRY_TOKEN, InjectSentry } from '../common';\nimport { SentryService } from './sentry.service';\nimport { Scope } from '@sentry/hub';\nimport { HttpArgumentsHost, ContextType, WsArgumentsHost, RpcArgumentsHost } from '@nestjs/common/interfaces';\nimport { Handlers } from '@sentry/node';\nimport { SentryInterceptorOptions, SentryInterceptorOptionsFilter } from '../interfaces/sentry-interceptor.interface';\n\n\n@Injectable()\nexport class SentryInterceptor implements NestInterceptor {\n\n  constructor(\n    @InjectSentry() private readonly client: SentryService,\n    private readonly options?: SentryInterceptorOptions) {}\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    // first param would be for events, second is for errors\n    return next.handle().pipe(\n      tap(null, (exception) => {\n        if (this.shouldReport(exception)) {\n          this.client.instance().withScope((scope) => {\n            switch (context.getType<GqlContextType>()) {\n              case 'http':\n                return this.captureHttpException(\n                  scope, \n                  context.switchToHttp(), \n                  exception\n                );\n              case 'rpc':\n                return this.captureRpcException(\n                  scope,\n                  context.switchToRpc(),\n                  exception,\n                );\n              case 'ws':\n                return this.captureWsException(\n                  scope,\n                  context.switchToWs(),\n                  exception,\n                );\n              case 'graphql':\n                return this.captureGraphqlException(\n                  scope, \n                  GqlExecutionContext.create(context), \n                  exception\n                );\n            }\n          })\n        }\n      })\n    );\n  }\n\n  private captureHttpException(scope: Scope, http: HttpArgumentsHost, exception: any): void {\n    const data = Handlers.parseRequest(<any>{},http.getRequest(), this.options);\n\n    scope.setExtra('req', data.request);\n    data.extra && scope.setExtras(data.extra);\n    if (data.user) scope.setUser(data.user);\n\n    this.captureException(scope, exception);\n  }\n\n  private captureRpcException(\n    scope: Scope,\n    rpc: RpcArgumentsHost,\n    exception: any,\n  ): void {\n    scope.setExtra('rpc_data', rpc.getData());\n\n    this.captureException(scope, exception);\n  }\n\n  private captureWsException(\n    scope: Scope,\n    ws: WsArgumentsHost,\n    exception: any,\n  ): void {\n    scope.setExtra('ws_client', ws.getClient());\n    scope.setExtra('ws_data', ws.getData());\n\n    this.captureException(scope, exception);\n  }\n\n  private captureException(scope: Scope, exception: any): void {\n    if (this.options) {\n      if (this.options.level) scope.setLevel(this.options.level);\n      if (this.options.fingerprint)\n        scope.setFingerprint(this.options.fingerprint);\n      if (this.options.extra) scope.setExtras(this.options.extra);\n      if (this.options.tags) scope.setTags(this.options.tags);\n    }\n\n    this.client.instance().captureException(exception);\n  }\n\n  private captureGraphqlException(scope: Scope, gqlContext: GqlExecutionContext, exception: any): void {\n    const info = gqlContext.getInfo()\n    const context = gqlContext.getContext() \n\n    scope.setExtra('type', info.parentType.name)\n\n    if (context.req) {\n      // req within graphql context needs modification in \n      const data = Handlers.parseRequest(<any>{}, context.req, this.options);\n\n      scope.setExtra('req', data.request);\n\n      data.extra && scope.setExtras(data.extra);\n      if (data.user) scope.setUser(data.user);\n   }\n\n    this.captureException(scope, exception);\n  }\n\n  private shouldReport(exception: any) {\n    if (this.options && !this.options.filters) return true;\n\n    // If all filters pass, then we do not report\n    if (this.options) {\n      const opts: SentryInterceptorOptions = this.options as {}\n      if (opts.filters) {\n        let filters: SentryInterceptorOptionsFilter[] = opts.filters\n        return filters.every(({ type, filter }) => {\n          return !(exception instanceof type && (!filter || filter(exception)));\n        });\n      }\n    } else {\n      return true;\n    }\n  }\n}\n"]}