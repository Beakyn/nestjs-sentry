{"version":3,"file":"sentry.interfaces.js","sourceRoot":"/","sources":["sentry.interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import { ModuleMetadata, Type } from \"@nestjs/common/interfaces\";\nimport { Integration, Options } from '@sentry/types';\n\nexport type SentryModuleOptions = Omit<Options, 'integrations'> & {\n    integrations?: Integration[];\n};\n\nexport interface SentryOptionsFactory {\n    createSentryModuleOptions(): Promise<SentryModuleOptions> | SentryModuleOptions;\n}\n\nexport interface SentryModuleAsyncOptions extends Pick<ModuleMetadata, 'imports'> {\n    inject?: any[];\n    useClass?: Type<SentryOptionsFactory>;\n    useExisting?: Type<SentryOptionsFactory>;\n    useFactory?: (...args: any[]) => Promise<SentryModuleOptions> | SentryModuleOptions;\n}"]}